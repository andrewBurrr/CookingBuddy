@page "/searchResult"
@using CookingBuddy.Models
@using CookingBuddy.Services
@using System.Collections;
@inject RecipeService RecipeServiceInj

@using CookingBuddy.Pages.search.model;

<div class="container body-container">
    <input class="form-control" type="text" placeholder="Chicken Tikka Masala" aria-label="default input example">
    <div class="accordion" id="accordionExample">
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingOne">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Filters
                </button>
            </h2>
            <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                <div class="accordion-body">
                    <div class="container form-check form-switch" style="padding-bottom:10px">
                        <label class="form-check-label" for="flexCheckDefault">
                            Total time(mins)
                        </label>
                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" checked="@timeChecked" @oninput="()=> timeChecked=!timeChecked">
                        @if(timeChecked){
                            <div class="container custom-card">
                                <input type="range" style="width:90%" />
                                90
                            </div>
                        }
                        
                    </div>
                    <div class="container form-check form-switch" style="padding-bottom:10px">
                        <label class="form-check-label" for="flexCheckDefault">
                            Calories(kcal)
                        </label>
                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault"checked="@caloriesChecked" @oninput="()=> caloriesChecked=!caloriesChecked">
                        @if(caloriesChecked){
                            <div class="container custom-card">
                                <input type="range" style="width:90%" />
                                950
                            </div>
                        }
                        
                    </div>
                    <div class="container form-check form-switch" style="padding-bottom:10px">
                        <label class="form-check-label" for="flexCheckDefault">
                            Price($)
                        </label>
                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" checked="@priceChecked" @oninput="()=> priceChecked=!priceChecked">
                        @if(priceChecked){
                            <div class="container custom-card">
                                <input type="range" style="width:90%" />
                                100.00
                            </div>
                        }
                        
                    </div>
                    <div class="container form-check form-switch" style="padding-bottom:10px">
                        <label class="form-check-label" for="flexCheckDefault">
                            Ratings
                        </label>
                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" checked="@ratingsChecked" @oninput="()=> ratingsChecked=!ratingsChecked">
                        @if (ratingsChecked)
                        {
                            <div class="container custom-card">
                                <input type="range" style="width:90%" step="1" min="0" max="5" />
                                5
                            </div>
                        }
                        
                    </div>
                    <div class="container" style="padding-bottom:10px">
                        Difficulty<br />
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault" style="padding-right:7px">
                            Expert
                        </label>
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault" style="padding-right:7px">
                            Home cook
                        </label>
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault " style="padding-right:7px">
                            Beginner
                        </label>
                    </div>
                    <div class="container">
                        Indgredients<br />
                        <div style=" width: 100%" class="input-group position-relative d-inline-flex align-items-center">
                            <input @bind="ingredientInput" @onkeyup="@IngredientChanged" class="form-control d-flex w-100 justify-content-center" placeholder="(e.g Chicken, Lettuce, etc)" aria-label="default input example" />

                            @if (ingredientInput.Length > 0)
                            {

                                <i @onclick="ClearIngredient" class="bi bi-x-lg position-absolute"
                               style="
                                  right: 10px;
                                  cursor: pointer;
                                  z-index: 100;">
                                </i>
                            }
                        </div>
                        <ul class="list-group list-group-flush">
                            @foreach(var ing in ingredients){
                                <li class="list-group-item" @key="@ing">
                                <div class="row">
                                    <div class="col">
                                        @ing
                                    </div>
                                    <div class="col text-end">
                                        <span class="oi bi bi-x-circle-fill" style="color:red" @onclick="@(()=>ingredients.Remove(ing))"></span>
                                    </div>
                                </div>
                            </li>
                            }

                            
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <br />
    @if (recipes == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="row">
            @foreach (var recipe in recipes)
            {
                <div class="col-md-auto">
                    <a style="text-decoration: none" href="/ViewRecipe">
                        <CookingBuddy.Pages.search.components.RecipeCard src="https://www.recipetineats.com/wp-content/uploads/2018/04/Chicken-Tikka-Masala_0.jpg" recipe=@recipesArray[0] />
                    </a>
                </div>
            }
        </div>
    }


    @*<div class="row">
        <div class="col-md-auto">
            <a style="text-decoration: none" href="/ViewRecipe">
                <CookingBuddy.Pages.search.components.RecipeCard src="https://www.recipetineats.com/wp-content/uploads/2018/04/Chicken-Tikka-Masala_0.jpg" recipe=@recipesArray[0] />
            </a>
        </div>
        <div class="col-md-auto">
            <a style="text-decoration: none" href="/ViewRecipe">
                <CookingBuddy.Pages.search.components.RecipeCard src="https://www.desiblitz.com/wp-content/uploads/2017/06/history-of-chicken-tikka-masala-2.png" recipe=@recipesArray[1] />
            </a>
        </div>
    </div>*@
</div>

@code{
    public static bool timeChecked { get; set; } = false;
    public static bool caloriesChecked { get; set; } = false;
    public static bool priceChecked { get; set; } = false;
    public static bool ratingsChecked { get; set; } = false;

    private static ArrayList ingredients = new ArrayList();

    public static string ingredientInput { get; set; } = "";


    string Error = "";
    List<Recipe> recipes = new List<Recipe>();
    Recipe objRecipe = new Recipe();

    //protected override async Task OnInitializedAsync()
    //{
    //    recipes = await RecipeServiceInj.GetRecipeAsync();
    //}

    public RecipeInformation[] recipesArray = new RecipeInformation[]
    {
        new RecipeInformation ( author : "Chef chi", title : "Chicken Tikka Masala Low calorie", calories : "300", difficulty : "Expert", price : "14.48", rating : "4.8", time : "30 mins" ),
        new RecipeInformation ( author : "Babish", title : "Chicken Tikka Masala Recipe", calories : "500", difficulty : "Home cook", price : "14.00", rating : "4.3", time : "2 hrs" )

    };

    private void IngredientChanged(KeyboardEventArgs eventArgs)
    {

        //ingredientInput = obj.Value.ToString();

        if (eventArgs.Key == "Enter")        // fire on enter
        {
            if (ingredientInput.Length > 0)
            {
                ingredients.Add(ingredientInput);
            }
        }
        ingredientInput = "";

    }

    private void ClearIngredient()
    {
        ingredientInput = "";

    }

    private void RemoveIngredient(int index)
    {
        ingredients.RemoveAt(index);
    }

   



}