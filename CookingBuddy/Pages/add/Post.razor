@page "/post"
@using CookingBuddy.Models
@using CookingBuddy.Services
@using System.Collections.Generic;
@inject RecipeService RecipeServiceInj

<h1 class="text-center"></h1>

<div class="container justify-content-around">
    <form>
        <div class="row mb-3">
            <label for="title" class="form-label">Title</label>
            <input type="text" class="form-control" @bind="recipe.Title" id="title" />
        </div>
        <div class="row mb-3">
            <label for="formFile" class="form-label">Add Media</label>
            <input class="form-control" type="file" @bind="recipe.Media" id="mediaFile">
        </div>
        <div class="row mb-3">
            <label for="price" class="form-label">Price</label>
            <div class="input-group mb-3">
                <span class="input-group-text">$</span>
                <input type="text" class="form-control" @bind="recipe.Price" id="price" />
                <span class="input-group-text">/Serving</span>
            </div>
        </div>
        <div class="row mb-3">
            <label for="yield" class="form-label">Yield</label>
            <div class="input-group mb-3">
                <select class="form-select" @bind="recipe.Yield" id="yield">
                    <option selected>Choose...</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                    <option value="6">6</option>
                    <option value="7">7</option>
                    <option value="8">8</option>
                    <option value="9">9</option>
                    <option value="10">10</option>
                </select>
                <span class="input-group-text">Servings</span>
            </div>
        </div>
        <div class="row mb-3">
            <label for="time" class="form-label">Time</label>
            <div class="input-group mb-3">
                <input type="number" class="form-control" @bind="recipe.Time" id="time" />
                <span class="input-group-text">Minutes</span>
            </div>
        </div>
        <h4 class="text-center">Ingredients</h4>
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Units</th>
                        <th scope="col">Ingredient</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th scope="row">1</th>
                        <td><input class="form-control" type="text" placeholder="qty"></td>
                        <td><input class="form-control" type="text" placeholder="unit"></td>
                        <td><input class="form-control" type="text" placeholder="ing"></td>
                        <td><button class="btn btn-danger"><i class="bi bi-trash"></i></button></td>
                    </tr>
                    <tr>
                        <th scope="row">2</th>
                        <td><input class="form-control" type="text" placeholder="qty"></td>
                        <td><input class="form-control" type="text" placeholder="unit"></td>
                        <td><input class="form-control" type="text" placeholder="ing"></td>
                        <td><button class="btn btn-danger"><i class="bi bi-trash"></i></button></td>
                    </tr>
                    <tr>
                        <th scope="row">3</th>
                        <td><input class="form-control" type="text" placeholder="qty"></td>
                        <td><input class="form-control" type="text" placeholder="unit"></td>
                        <td><input class="form-control" type="text" placeholder="ing"></td>
                        <td><button class="btn btn-danger"><i class="bi bi-trash"></i></button></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <a class="btn btn-primary">Add Ingredient</a>
        <br />
        <br />
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Stages</h5>
                <ul class="nav nav-tabs card-header-tabs" data-bs-tabs="tabs">
                    <li class="nav-item">
                        <a class="nav-link active" aria-current="true" data-bs-toggle="tab" href="#stage1">Stage 1</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#stage2">Stage 2</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#stage3">Stage 3</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#addstage"><i class="bi bi-plus"></i></a>
                    </li>
                </ul>
            </div>
            <div class="card-body tab-content">
                <div class="tab-pane active" id="stage1">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Step 1</h4>
                            <textarea class="form-control" id="instructionArea1" rows="3"></textarea>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="stage2">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Step 1</h4>
                            <textarea class="form-control" id="instructionArea1" rows="3"></textarea>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="stage3">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Step 1</h4>
                            <textarea class="form-control" id="instructionArea1" rows="3"></textarea>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="addstage">
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title">Step 1</h4>
                            <textarea class="form-control" id="instructionArea1" rows="3"></textarea>
                        </div>
                    </div>
                </div>
                <button class="btn btn-primary">Add Step</button>
            </div>
        </div>
        <br />
        <div class="btn-group d-flex">
            <a href="#" class="btn btn-danger flex-even">Save as draft</a>
            <a href="#" class="btn btn-primary flex-even" @onclick="SaveRecipe">Post</a>
        </div>
    </form>
    <br />
    <br />
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Link { get; set; }

    [Parameter]
    public string Src { get; set; }

    public Recipe recipe = new Recipe();

    public void AddRecipe() {
        recipe = new Recipe();
        recipe.Id = 0;
    }

    async Task SaveRecipe()
    {
        try
        {
            if (recipe.Id == 0)
            {
                Recipe newRecipe = new Recipe();
                newRecipe.Title = recipe.Title;
                newRecipe.Media = "https://i.ytimg.com/vi/ISGbUMaDC7w/hqdefault.jpg";
                newRecipe.Price = recipe.Price;
                newRecipe.Yield = recipe.Yield;
                newRecipe.Time = recipe.Time;
                var list_autors = new List<string> { "Alice", "Bob", "John Doe", "Jane Doe", };
                var random = new Random();
                newRecipe.Author = list_autors[random.Next(list_autors.Count)];
                var list_calories = new List<string> { "300", "350", "400", "200","1000","1500" };
                newRecipe.Calories = list_calories[random.Next(list_calories.Count)];
                var list_rating = new List<string> { "1", "2", "3", "4","5" };
                newRecipe.Rating = list_rating[random.Next(list_rating.Count)];
                var list_diffculty = new List<string> { "Easy", "Medium", "Hard", "Expert"};
                newRecipe.Difficulty = list_diffculty[random.Next(list_diffculty.Count)];

                var newRecipeObj = await RecipeServiceInj.CreateRecipeAsync(newRecipe);

            }
            else
            {
                await RecipeServiceInj.UpdateRecipeAsync(recipe);
            }
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
        }
    }
}


